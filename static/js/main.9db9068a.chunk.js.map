{"version":3,"sources":["reducers/index.js","actions/index.js","components/Result.js","components/PerNavbar.js","components/Section.js","containers/App.js","components/Character.js","components/Favorites.js","index.js"],"names":["initialState","result","user","character","rootReducer","combineReducers","allForOne","state","action","type","console","log","data","fav","filter","char","allFav","undefined","includes","axiosInstance","axios","create","baseURL","headers","delCharacter","item","dispatch","page","url","a","get","res","alive","then","resp","catch","e","error","fetchRandom","fetch","method","response","json","onlySuit","change","numero","encodeURIComponent","connect","random","props","optionsSuit","value","label","animatedComponents","makeAnimated","useState","btnCheck","setBtnCheck","checked","setChecked","listChecked","setListChecked","Container","Row","xs","md","Col","onSubmit","preventDefault","bool","suitAndNumber","setState","className","onChange","components","defaultValue","options","listClick","src","image","navbar","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","Collapse","id","Nav","Link","eventKey","navigate","useNavigate","filterAliveStr","setFilterAliveStr","filterGenderStr","setFilterGenderStr","nextPage","setNextPage","prevPage","setPrevPage","statusClick","target","genderClick","Filters","lg","style","margin","Form","Select","onClick","useEffect","stringSearch","getAllChar","Results","xl","results","map","Card","width","height","Img","Body","padding","Title","fontWeight","name","Text","status","gender","species","Button","dataAll","replace","sendCharacter","pageClick","info","prev","next","ControlPages","Stack","direction","gap","App","Component","isFav","checkFav","allFavs","characterFav","location","Subtitle","origin","delFav","deletCharacter","middleware","thunk","persistConfig","key","storage","myPersistReducer","persistReducer","reducer","store3","createStore","composeWithDevTools","applyMiddleware","persistor3","persistStore","ReactDOM","render","store","loading","persistor","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.9db9068a.chunk.js","sourcesContent":["//reducers\nimport { combineReducers } from 'redux'\n\nconst initialState = {\n    result: {},\n    user:[],\n    character:{}\n};\n\n\nfunction allForOne(state = initialState, action) {\n    switch (action.type) {\n        case \"All\": {\n            console.log(\"entramos a alll\")\n            return {...state, result: action.data }\n        }\n        case \"FilterAlive\": {\n            return { ...state, result: action.data}\n        }\n        case \"FilterMany\": {\n            return { ...state, result: action.data}\n        }\n        case \"Page\": {\n            return { ...state, result: action.data}\n        }\n        case \"DelFav\": {\n            console.log(action.fav)\n            return { ...state, user: state.user.filter( char => char !== action.fav )}\n        }\n        case \"AddFav\": {\n            // (state.user.includes(action.fav) ? state.user.filter( char => char !== action.fav ) : [...state.user, action.fav])\n            console.log(action.allFav)\n            console.log(\"assdaasdasdsad\")\n        \n            if(state.user === undefined) return { ...state, user: [action.fav]}\n            if(state.user !== undefined) return  { ...state, user: (state.user.includes(action.fav) ? state.user.filter( char => char !== action.fav ) : [...state.user, action.fav]) }\n   \n        }\n        case \"Character\": {\n            return {\n                ...state,\n                character: action.char,\n                result: action.data\n            }\n        }\n\n\n        default: return state\n    }\n}\n\n\n\n\nconst rootReducer = combineReducers({\n    allForOne\n})\n\nexport default rootReducer","import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n    baseURL: \"http://rickandmortyapi.com/api/\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  });\n\n  export const delCharacter= (item) => (dispatch) => {\n    console.log(item)\n\n    return dispatch({type:\"DelFav\", fav: item})\n} \n\n\n\n\nexport const characterFav = (character, allFavs) => (dispatch) => {\n    console.log(allFavs)\n    return dispatch({type:\"AddFav\", fav: character, allFav: allFavs})\n}  \n\n\n\n\nexport const characterInfo = (character, dataAll) => (dispatch) => {\n\n    return dispatch({type:\"Character\", char: character, data: dataAll})\n}  \n\n\n\n\nexport const page = (state, url) => (dispatch) => {\n    const alive = async () => {\n        const res = await axiosInstance.get(url);\n        return res\n    }\n\n    return alive().then((resp) => { dispatch({ type: \"Page\", data: resp.data }) })\n    .catch((e) => {\n        console.error(e);\n    })\n}\n\n\nexport const filterMany = (state, filter) => (dispatch) => {\n\n    if (filter[1] === undefined) var stringSearch = `character/?status=${filter[0]}`\n    if (filter[0] === undefined) var stringSearch = `character/?gender=${filter[1]}`\n\n    if (filter[1] && filter[0]) var stringSearch = `character/?status=${filter[0]}&gender=${filter[1]}`\n\n\n    const alive = async () => {\n        const res = await axiosInstance.get(stringSearch);\n        return res\n    }\n\n    return alive().then((resp) => { dispatch({ type: \"FilterMany\", data: resp.data }) })\n    .catch((e) => {\n        console.error(e);\n    })\n\n}\n\n\n\nexport const filterAlive = (state, filter) => (dispatch) => {\n    console.log(filter)\n\n    const alive = async () => {\n        const res = await axiosInstance.get('character/?status=' + filter);\n        return res\n    }\n\n    return alive().then((resp) => { dispatch({ type: \"FilterAlive\", data: resp.data }) })\n    .catch((e) => {\n        console.error(e);\n    })\n\n}\n\nexport const getAllCharacters = (state) => (dispatch) => {\n    const getAllChar = async () => {\n        try {\n            const resp = await axiosInstance.get('character');\n            \n            dispatch({ type: \"All\", data: resp.data })\n        } catch (err) {\n            // Handle Error Here\n            console.error(err);\n        }\n    };\n\n    return getAllChar()\n}\n\n\n\n\nexport const fetchRandom = (state) => (dispatch) => {\n\n    return fetch(`http://localhost:8080/cards/random`, {\n        method: 'GET', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n        } // body data type must match \"Content-Type\" header\n    }).then(response => response.json())\n      .then(json => {\n          dispatch({ type: \"Random\", data: json });\n        })\n}\n\nexport const onlyNumbers = (state) => (dispatch) => {\n    return fetch(`http://localhost:8080/cards/onlyNumbers`, {\n        method: 'GET', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n        } // body data type must match \"Content-Type\" header\n    }).then(response => response.json())\n      .then(json => {\n          dispatch({ type: \"Numbers\", data: json });\n        })\n}\n\n\nexport const onlySuit = (state, change, numero) => (dispatch) => {\n\n    console.log(numero)\n    \n    return fetch(`http://localhost:8080/cards/suit/${encodeURIComponent(change[\"value\"])}`, {\n        method: 'GET', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n        } // body data type must match \"Content-Type\" header\n    }).then(response => response.json())\n      .then(json => {\n          dispatch({ type: \"Suit\", data: json });\n        })\n        \n}\n\n\nexport const suitAndNumber = (state, numero, listChecked) => (dispatch) => {\n\n    \n    var bool = (numero !== false)\n    console.log(listChecked)\n    \n    return fetch(`http://localhost:8080/cards/querySuitNumber/?suit=${encodeURIComponent(listChecked[\"value\"])}&number=${encodeURIComponent( bool)}`, {\n        method: 'GET', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n        } // body data type must match \"Content-Type\" header\n    }).then(response => response.json())\n      .then(json => {\n          dispatch({ type: \"SuitNumber\", data: json });\n        })\n        \n        \n}\n","import React, { useState } from 'react'\nimport { connect, useDispatch, useSelector } from 'react-redux';\n\nimport { fetchRandom, onlyNumbers, onlySuit, suitAndNumber } from '../actions'\n\nimport List from 'react-list-select'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated';\nimport { Container, Row, Col } from 'react-bootstrap';\n\n\n\nconst Result = (props) => {\n  const optionsSuit = [\n    { value: 'DIAMONDS', label: 'Diamonds' },\n    { value: 'SPADES', label: 'Spades' },\n    { value: 'HEARTS', label: 'Hearts' },\n    { value: 'CLUBS', label: 'Clubs' }\n  ]\n\n\n  const animatedComponents = makeAnimated();\n\n  const [state, setState] = useState();\n\n  const [btnCheck, setBtnCheck] = useState(false);\n\n  const [checked, setChecked] = useState(['numeros']);\n\n  const [listChecked, setListChecked] = useState(optionsSuit[0]);\n\n  let itemsSuit = ['DIAMONDS', 'SPADES', 'HEARTS', 'CLUBS'];\n\n\n  const [suit, setSuit] = useState()\n\n  const listClick = (e) => {\n    console.log(e)\n    setListChecked(e);\n\n    console.log(\"asdasdasdasd\")\n    props.dispatch(onlySuit(setState, e, btnCheck))\n\n  }\n\n  const Lists = () => {\n    return (\n      <div>\n        <Select\n          components={animatedComponents}\n          defaultValue={[optionsSuit[0]]}\n          options={optionsSuit}\n          onChange={(e) => listClick(e)} />\n      </div>\n    );\n  }\n\n\n  const onClicker = (e) => {\n    e.preventDefault();\n    props.dispatch(fetchRandom(setState));\n  };\n\n\n  const onSubmit = (e) => {\n\n    e.preventDefault();\n\n\n\n    if (checked.includes(\"numeros\")) props.dispatch(fetchRandom(setState));\n    else if (btnCheck) props.dispatch(suitAndNumber(setState, btnCheck, listChecked))\n    else if (!btnCheck) props.dispatch(onlySuit(setState, listChecked, btnCheck))\n    else props.dispatch(onlyNumbers(setState));\n  };\n\n\n\n  const handleChange = () => {\n\n    if (!checked.includes(\"numeros\")) {\n      setChecked(['numeros'])\n      setBtnCheck(!checked);\n    }\n    else {\n      console.log(\"sdasasd\")\n      setBtnCheck(checked)\n      setChecked(checked.filter(item => item !== \"numeros\"))\n    }\n\n    console.log(checked)\n  }\n\n  // <span>{props.data.image}</span>\n\n\n\n\n  return (\n    <Container>\n    <Row xs={1} md={2}>\n\n        <Col>\n          <form onSubmit={onSubmit} className=\"forms\">\n            <div>\n              <a>\n                Solo numeros\n              </a>\n              <input type='checkbox' checked={btnCheck} onChange={(e) => handleChange()} value='numeros' >\n\n              </input>\n            </div>\n            <div className='listaSuit'>\n              <a>Por genero de carta</a>\n              {Lists()}\n            </div>\n\n\n            <button type='submit' className='btn btn-primary btn-lg'\n              aria-label=\"Increment value\">\n              CalcularNueva\n            </button>\n          </form>\n        </Col>\n\n        <Col className='imagenCol'>\n          <div className='imagen'>\n\n            <img src={props.data.image} />\n          </div>\n        </Col>\n    </Row>\n    </Container>\n  );\n}\n\n\nconst stateMapToPros = state => {\n\n  return { data: state.random.result }\n\n}\n\n\nexport default connect(stateMapToPros)(Result)\n\n","import { Container, Row, Col, Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst PerNavbar = (props) => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n            <Container >\r\n                <Navbar.Brand href=\"/home\">I'm a Pickle Mortyyy</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\" className='perNavBar'>\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"/all\">Universo</Nav.Link>\r\n                        <Nav.Link href=\"/otro\">Ricker</Nav.Link>\r\n                    </Nav>\r\n                    <Nav>\r\n                        <Nav.Link eventKey={2} href=\"/favorites\">\r\n                            Cuenta\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nconst stateMapToPros = state => {\r\n\r\n    return { data: state.allForOne.navbar }\r\n\r\n}\r\n\r\n\r\nexport default connect(stateMapToPros)(PerNavbar)","import { Container, Row, Col, Card, Button, Form, Stack } from \"react-bootstrap\"\r\nimport React, { useState, useEffect } from 'react'\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { getAllCharacters, filterAlive, filterMany, page, characterInfo } from '../actions'\r\n\r\nimport { Navigate, useNavigate  } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Section = (props) => {\r\n\r\n    let navigate = useNavigate();\r\n    \r\n\r\n    const [state, setState] = useState();\r\n\r\n    const [resultList2, setResultList2] = useState([\"uno\", \"aaasd\", \"fgdf\", \"rtert\"]);\r\n\r\n    const [resultList, setResultList] = useState([]);\r\n\r\n    const [filterAliveStr, setFilterAliveStr] = useState();\r\n\r\n    const [filterGenderStr, setFilterGenderStr] = useState();\r\n\r\n    const [nextPage, setNextPage] = useState();\r\n\r\n    const [prevPage, setPrevPage] = useState();\r\n\r\n\r\n    const statusClick = (e) => {\r\n        e.preventDefault();\r\n        setFilterAliveStr(e.target.value)\r\n    }\r\n\r\n    const genderClick = (e) => {\r\n        e.preventDefault();\r\n        setFilterGenderStr(e.target.value)\r\n    }\r\n\r\n    //  ------------------------------------------------ filtros---------------------------------------------------\r\n    const Filters = () => {\r\n        return (\r\n            <Row xs={1} md={2} lg={3} style={{margin: '1.5rem 0 1.5rem 0'}}>\r\n                <Col>\r\n                    <Form.Select aria-label=\"Status Living\" className=\"selectionStatus\" defaultValue={filterAliveStr}>\r\n                        <option value=\"Dead\" onClick={(e) => statusClick(e)}>Dead</option>\r\n                        <option value=\"Alive\" onClick={(e) => statusClick(e)} >Alive</option>\r\n                        <option value=\"unknown\" onClick={(e) => statusClick(e)} >*unknown</option>\r\n                    </Form.Select>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Select aria-label=\"Gender\" className=\"selectionGender\" defaultValue={filterGenderStr}>\r\n                        <option value=\"Female\" onClick={(e) => genderClick(e)}>Female</option>\r\n                        <option value=\"Male\" onClick={(e) => genderClick(e)} >Male</option>\r\n                        <option value=\"Genderless\" onClick={(e) => genderClick(e)} >Genderless</option>\r\n                        <option value=\"unknown\" onClick={(e) => genderClick(e)} >*unknown</option>\r\n                    </Form.Select>\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        var bool = (filterAliveStr || filterGenderStr)\r\n            if (bool) {\r\n                console.log(\"sdassadassdasadd\")\r\n                props.dispatch(filterMany(setState, [filterAliveStr, filterGenderStr]))\r\n            }\r\n            if (!bool) {\r\n                console.log(\"sdad\")\r\n                props.dispatch(getAllCharacters(setState))\r\n\r\n            }\r\n        if (nextPage || prevPage) {\r\n            if (nextPage) props.dispatch(page(setState, nextPage))\r\n            else props.dispatch(page(setState, prevPage))\r\n        }\r\n\r\n\r\n\r\n    }, [filterAliveStr, filterGenderStr, nextPage, prevPage]);\r\n\r\n\r\n    //  ------------------------------------------------ Resultados ---------------------------------------------------\r\n    const sendCharacter = (e, item) => {\r\n        \r\n        e.preventDefault();\r\n        console.log(item)\r\n        \r\n        props.dispatch(characterInfo(item, props.data))\r\n\r\n        navigate(\"/character\", { replace: true });\r\n    }\r\n\r\n\r\n    const Results = () => {\r\n        console.log(props)\r\n        return (\r\n            <Row xs={1} md={2} lg={3} xl={4}>\r\n                {props.data.results ? props.data.results.map((item) => (\r\n                    <Col key={item.id}>\r\n\r\n                        <Card className=\"backCard\" style={{ width: '18rem', height: '26rem', margin: '4% 0 4% 0' }}>\r\n                            <div className=\"ContImgCard\"> <Card.Img variant=\"top\" src={item.image} className=\"imgCard\" /> </div>\r\n                            <Card.Body style={{padding: '1.1rem 2rem'}}>\r\n                                <Card.Title style={{margin:'0 0 0.1rem 0',  fontWeight: 'bolder'}} >{item.name}</Card.Title>\r\n                                <Card.Text style={{margin:'0 0 0.1rem 0'}}>\r\n                                    {item.status} -\r\n                                    {item.gender} -\r\n                                    {item.species}\r\n                                </Card.Text>\r\n                                <Button style={{margin:'0 0 0 2.2rem'}} variant=\"primary\" href=\"/character\" onClick={(e) => sendCharacter(e, item)} >Agregar Favorito</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                )) : \"asdasd\"}\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    const pageClick = (e) => {\r\n        setPrevPage(\"\")\r\n        setNextPage(\"\")\r\n        e.preventDefault();\r\n        if (e.target.value === \"PrevPag\") setPrevPage(props.data.info.prev)\r\n        if (e.target.value === \"NextPag\") setNextPage(props.data.info.next)\r\n    }\r\n\r\n    //  ------------------------------------------------ pages ---------------------------------------------------\r\n    const ControlPages = () => {\r\n        return (\r\n            <Stack direction=\"horizontal\" gap={2} className=\"NumberPages\">\r\n                <Button value=\"PrevPag\"\r\n                    variant=\"danger\" className=\" border\" onClick={(e) => pageClick(e)} >Prev. Pagina</Button>\r\n\r\n                <Button value=\"NextPag\"\r\n                    variant=\"danger\" className=\" border ms-auto\" onClick={(e) => pageClick(e)} >Sig. Pagina</Button>\r\n            </Stack>\r\n        )\r\n    }\r\n\r\n                                        \r\n\r\n    return (\r\n        <Container className=\"resultCont\">\r\n            <div style={{fontWeight: 'bolder'}}>\r\n                Si no funciona el filtro, porfavor recargar varias veces la pagina, esto es debido a un problema con la API de Rick and Morty\r\n                Mas informacion <a target=\"_blank\" href=\"https://github.com/afuh/rick-and-morty-api/issues/72\">aqui</a>\r\n            </div>\r\n\r\n            <Filters />\r\n\r\n            <ControlPages />\r\n\r\n            <Results />\r\n\r\n            <ControlPages />\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nconst stateMapToPros = state => {\r\n    return { data: state.allForOne.result, char: state.allForOne.character }\r\n\r\n}\r\n\r\n\r\nexport default connect(stateMapToPros)(Section)","import React, { Component } from 'react'\nimport Result from '../components/Result'\nimport { Container, Row, Col, Navbar } from 'react-bootstrap';\nimport PerNavbar from '../components/PerNavbar'\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\"\n\nimport Section from '../components/Section'\n\nimport { createHashHistory } from 'history';\n\n\n\nclass App extends Component {// component stateful\n  \n  render() {\n    return (<>\n          <Section/>\n    </>)\n  }\n}\n\nexport default App\n\n\n/*\n<div className='main center-block container-fluid'>\n        <h3 className='title'>Generar carta al azar</h3>\n          <Result />\n        </div>\n*/\n\n","import { Container, Row, Col, Card, Button, Form, Stack } from \"react-bootstrap\"\r\nimport React, { useState, useEffect } from 'react'\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { getAllCharacters, filterAlive, filterMany, page, characterFav, delCharacter } from '../actions'\r\n\r\n\r\nimport { Navigate, useNavigate  } from 'react-router-dom';\r\n\r\nconst Character = (props) => {\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const [ isFav, setIsFav ] = useState();\r\n\r\n    const [ character, setCharacter ] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [isFav, props.data]);\r\n\r\n\r\n\r\n    console.log(props.fav)\r\n    console.log(props.data)\r\n\r\n    const checkFav = (e) => {\r\n        e.preventDefault();\r\n        console.log(props.fav)\r\n\r\n        props.dispatch(characterFav(props.data, props.fav))\r\n\r\n        // navigate(\"/favorites\", { replace: true });\r\n    }\r\n\r\n    const delFav = (e) => {\r\n        e.preventDefault();\r\n\r\n        props.dispatch(delCharacter(props.data))\r\n\r\n        // navigate(\"/favorites\", { replace: true });\r\n    }\r\n\r\n    if (props.data && props.data.location) {\r\n        return(\r\n            <Container>\r\n                <Row xs={1} md={2}>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Img variant=\"top\" src={props.data.image} />\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    <a className=\"cardTitle\">{props.data.name}</a>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card style={{ width: '18rem' }}>\r\n                            <Card.Body>\r\n                                <Card.Title>ESPECIE = {props.data.species}</Card.Title>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\">Genero = {props.data.gender} __ Situacion = {props.data.status}</Card.Subtitle>\r\n                                <Card.Text>\r\n                                    Visto por ultima vez en:  {props.data.location.name}\r\n                                </Card.Text>\r\n                                <Card.Text>\r\n                                    Primeramente visto en: {props.data.origin.name}\r\n                                </Card.Text>\r\n                                <Card.Link href=\"#\" onClick={(e) => { checkFav(e) }}> {(!props.fav.includes(props.data)) && <>Agregar a fav </> }</Card.Link>\r\n                                <Card.Link href=\"#\" onClick={(e) => { delFav(e) }}> {(props.fav.includes(props.data)) && <>EN FAVORITOS</> }</Card.Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        )\r\n    } else {\r\n        return(<>NO HABEMUS NADA</>)\r\n    }\r\n\r\n}\r\n\r\nconst stateMapToPros = state => {\r\n    return { data: state.allForOne.character, fav: state.allForOne.user }\r\n}\r\n\r\n\r\nexport default connect(stateMapToPros)(Character)","import { Container, Row, Col, Navbar, Nav, NavDropdown, Form, FormControl, Button, Card } from 'react-bootstrap';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { delCharacter } from '../actions'\r\n\r\n\r\n\r\nconst Favorites = (props) => {\r\n\r\n    console.log(props.fav)\r\n\r\n    const deletCharacter = (e, item) => {\r\n\r\n        props.dispatch(delCharacter(item))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row xs={1} md={3}>\r\n            {props.fav.map(item => {\r\n                return (\r\n                    <Col >\r\n                        <Card className='cardFav'>\r\n                            <Card.Title>{item.name}</Card.Title>\r\n                            <Card.Img variant=\"top\" src={item.image} />\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    Descripcion\r\n                                </Card.Text>\r\n\r\n                                <Button variant=\"danger\" onClick={(e) => deletCharacter(e, item)} >Eliminar</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n\r\n            })\r\n            }\r\n            </Row>\r\n\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst stateMapToPros = state => {\r\n\r\n    return { fav: state.allForOne.user }\r\n\r\n}\r\n\r\n\r\nexport default connect(stateMapToPros)(Favorites)","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\n\n\nimport reducer from './reducers'\n\n\nimport App from './containers/App'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\"\nimport PerNavbar from './components/PerNavbar'\n\nimport Character from './components/Character'\n\nimport Favorites from './components/Favorites'\n\nimport {PersistGate} from 'redux-persist/lib/integration/react';\n\n\nimport storage from 'redux-persist/lib/storage/session';\n\nimport {persistStore, persistReducer} from 'redux-persist';\n\n\n\nimport '../src/style.scss';\n\n\nconst middleware = [ thunk ]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\n\n\nconst myPersistReducer = persistReducer(persistConfig, reducer);\n\nconst store3 = createStore(\n  myPersistReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\n\nconst persistor3 = persistStore(store3)\n\n\n\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store3}>\n    <PersistGate loading={null} persistor={persistor3}>\n      <PerNavbar/>\n      <Routes>\n        <Route path=\"/\" element={<><h1>BIENVENIDO, PORFAVOR DELE CLICK EN UNIVERSO PARA TRAER TODOS LOS PERSONAJES, O</h1></>}/>\n        <Route path=\"/all\" element={<><App/></>}/>\n        <Route path=\"/character\" element={<><Character /></>}/>\n        <Route path=\"/favorites\" element={<><Favorites /></>}/>\n        \n      </Routes>\n      </PersistGate>\n\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}